name: Go CI

run-name: Go CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

permissions:
  pull-requests: write
  contents: read

jobs:
  test:
    runs-on: ubuntu-22.04

    steps:
      - uses: actions/checkout@v4

      - uses: reviewdog/action-setup@v1
        with:
          reviewdog_version: latest

      - uses: actions/setup-go@v5
        with:
          go-version: ^1.23

      - name: Get dependencies
        run: go mod download

      - name: Run Test
        run: go test -v -race -coverprofile=coverage.txt -covermode=atomic ./...

      - name: Generate coverage report
        run: |
          go tool cover -func=coverage.txt > coverage.out
          echo "COVERAGE=$(grep total: coverage.out | grep -o '[0-9]\+\.[0-9]\+')" >> $GITHUB_ENV

      - name: Find Comment
        if: github.event_name == 'pull_request'
        uses: peter-evans/find-comment@v3
        id: fc
        with:
          issue-number: ${{ github.event.pull_request.number }}
          comment-author: 'github-actions[bot]'
          body-includes: Test Coverage

      - name: Update or Create Comment
        if: github.event_name == 'pull_request'
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          COMMENT_BODY=":線グラフ: Test Coverage: ${{ env.COVERAGE }}%
          [Full coverage report](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})
          "
          if [ -n "${{ steps.fc.outputs.comment-id }}" ]; then
            gh pr comment ${{ github.event.pull_request.number }} --body "$COMMENT_BODY" --edit-last ${{ steps.fc.outputs.comment-id }}
          else
            gh pr comment ${{ github.event.pull_request.number }} --body "$COMMENT_BODY"
          fi
